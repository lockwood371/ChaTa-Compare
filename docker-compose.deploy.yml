version: '3.3'

services:
  backend:
    build: 
      context: ./backend
      dockerfile: backend.dockerfile
    deploy:
      labels:
        - traefik.frontend.rule=PathPrefix:/api,/docs,/redoc
        - traefik.enable=true
        - traefik.port=80
        - traefik.tags=${TRAEFIK_TAG}

  celeryworker:
    build:
      context: ./backend
      dockerfile: celeryworker.dockerfile

  frontend:
    build: 
      context: ./frontend
      args:
          FRONTEND_ENV: ${FRONTEND_ENV-production}
    deploy:
      labels:
        - traefik.frontend.rule=PathPrefix:/
        - traefik.enable=true
        - traefik.port=80
        - traefik.tags=${TRAEFIK_TAG}

  proxy:
    command: --docker \
      --docker.swarmmode \
      --docker.watch \
      --docker.exposedbydefault=false \
      --constraints=tag==${TRAEFIK_TAG} \
      --logLevel=INFO \
      --accessLog \
      --web
    deploy:
      labels:
        # For the configured domain
        - traefik.frontend.rule=Host:${DOMAIN}
        # For a domain with and without 'www'
        # Comment the previous line above and un-comment the line below
        # - "traefik.frontend.rule=Host:www.${DOMAIN},${DOMAIN}"
        - traefik.enable=true
        - traefik.port=80
        - traefik.tags=${TRAEFIK_PUBLIC_TAG}
        - traefik.docker.network=${TRAEFIK_PUBLIC_NETWORK}
        # Traefik service that listens to HTTP
        - traefik.servicehttp.frontend.entryPoints=http
        - traefik.servicehttp.frontend.redirect.entryPoint=https
        # Traefik service that listens to HTTPS
        - traefik.servicehttps.frontend.entryPoints=https
        # Uncomment the config line below to detect and redirect www to non-www (or the contrary)
        # The lines above for traefik.frontend.rule are needed too
        # - "traefik.servicehttps.frontend.redirect.regex=^https?://(www.)?(${DOMAIN})/(.*)"
        # To redirect from non-www to www un-comment the line below
        # - "traefik.servicehttps.frontend.redirect.replacement=https://www.${DOMAIN}/$$3"
        # To redirect from www to non-www un-comment the line below
        # - "traefik.servicehttps.frontend.redirect.replacement=https://${DOMAIN}/$$3"
      placement:
        constraints:
          - node.role == manager
    networks:
      - ${TRAEFIK_PUBLIC_NETWORK}
      - default

  db:
    volumes:
      - app-db-data:/var/lib/postgresql/data/pgdata
    deploy:
      placement:
        constraints:
          - node.labels.${STACK_NAME}.app-db-data == true

  pgadmin:
    deploy:
      labels:
        - traefik.frontend.rule=Host:pgadmin.${DOMAIN}
        - traefik.enable=true
        - traefik.port=5050
        - traefik.tags=${TRAEFIK_PUBLIC_TAG}
        - traefik.docker.network=${TRAEFIK_PUBLIC_NETWORK}
        # Traefik service that listens to HTTP
        - traefik.redirectorservice.frontend.entryPoints=http
        - traefik.redirectorservice.frontend.redirect.entryPoint=https
        # Traefik service that listens to HTTPS
        - traefik.webservice.frontend.entryPoints=https
    networks:
      - ${TRAEFIK_PUBLIC_NETWORK}
      - default

  flower:
    deploy:
      labels:
        - traefik.frontend.rule=Host:flower.${DOMAIN}
        - traefik.enable=true
        - traefik.port=5555
        - traefik.tags=${TRAEFIK_PUBLIC_TAG}
        - traefik.docker.network=${TRAEFIK_PUBLIC_NETWORK}
        # Traefik service that listens to HTTP
        - traefik.redirectorservice.frontend.entryPoints=http
        - traefik.redirectorservice.frontend.redirect.entryPoint=https
        # Traefik service that listens to HTTPS
        - traefik.webservice.frontend.entryPoints=https
    networks:
      - ${TRAEFIK_PUBLIC_NETWORK}
      - default

networks:
  traefik-public:
    external: true

volumes:
  app-db-data:
